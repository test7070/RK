SET QUOTED_IDENTIFIER ON
GO


--領料成本
ALTER function [dbo].[cost_rk](@tablea nvarchar(20)
	,@accy nvarchar(10)
	,@noa nvarchar(20)
	,@noq nvarchar(10))
returns @result table(
	uno nvarchar(30),[weight] float,[money] float
) as
begin
	-- 2018/04/17  改為一次只會算一天
	declare @xweight decimal(25,5) = 0
	declare @xmoney float = 0
	-------------------------------------------------------------
	declare @typea nvarchar(20)
	declare @money float 
	declare @uno nvarchar(30)
	declare @date nvarchar(20)
	declare @datea nvarchar(10)
	declare @mount float
	declare @weight decimal(25,5)
	declare @sprice float
	--===============================================================================================
	select @uno = '',@typea=''
	if @tablea='vccs'
	begin
		select @typea=b.typea,@uno = a.uno,@date=b.datea,@xweight=case when isnull(a.gweight,0)!=0 then a.gweight else isnull(a.[weight],0) end
		from view_vccs a
		left join view_vcc b on a.accy=b.accy and a.noa=b.noa
		where a.accy=@accy and a.noa=@noa and a.noq=@noq
	end
	else if @tablea='gets'
	begin
		select @uno = a.uno,@date=b.datea,@xweight=isnull(a.gweight,0)
		from view_gets a
		left join view_get b on a.accy=b.accy and a.noa=b.noa
		where a.accy=@accy and a.noa=@noa and a.noq=@noq
	end
	else if @tablea='cubt'
	begin
		select @uno = a.uno,@date=b.datea,@xweight=isnull(a.wweight,0)
		from view_cubt a
		left join view_cub b on a.accy=b.accy and a.noa=b.noa
		where a.accy=@accy and a.noa=@noa and a.noq=@noq
	end
	insert into @result(uno,[weight],[money])
	select @uno,@xweight,0

	if len(@uno)=0
		return 
	--出貨退回
	declare @ydate nvarchar(20) = ''
	declare @yweight float = 0
	declare @ycost float = 0
	if @tablea='vccs' and @typea='2'
	begin
		--找出上一筆該批號的出貨
		select top 1 @ydate=b.datea
			,@yweight = case when isnull(a.gweight,0)!=0 then a.gweight else isnull(a.[weight],0) end
			,@ycost = isnull(a.scost,0)
		from view_vccs a
		left join view_vcc b on a.accy=b.accy and a.noa=b.noa
		where uno=@uno
		-- 2018/05/10 出、退貨有可能同一天   原本是 b.datea<@date,現在改為b.datea<=@date
		and b.datea<=@date
		and b.typea='1'
		order by b.datea desc,a.accy desc,a.noa desc,a.noq desc

		if @xweight=@yweight
		begin
			--代表一次退完,所以成本就依上次的出貨
			update @result set [money] = @ycost
		end
		else
		begin
			-- 成本就依上次的出貨 (成本/重量)*退貨重量
			-- 暫不管尾差,等之後再說
			update @result set [money] = case when isnull(@yweight,0)=0 then 0 else round(@ycost/@yweight*@xweight,0) end
		end
		return
	end
	--開帳成品
	declare @strdate nvarchar(20) = ''
	declare @strweight decimal(25,5) = 0
	declare @strprice float = 0
	declare @strmoney float	=0
	select @strdate=datea ,@strweight=mount,@strprice=price,@strmoney=[money]
	from itemb 
	where uno=@uno
		
	--找出領料,以便攤成本
	declare @tmp table(
		sel int identity(1,1)
		,tablea nvarchar(20)
		,accy nvarchar(10)
		,noa nvarchar(20)
		,noq nvarchar(10)
		,datea nvarchar(10)
		,mount float
		,[weight] float
		,[money] float
		,isucce bit --盤點
	)
	--出貨
	insert into @tmp(tablea,accy,noa,noq,datea,mount,[weight])
	select 'vcc',a.accy,a.noa,a.noq,b.datea
		,case when isnull(a.gmount,0)!=0 then a.gmount else isnull(a.mount,0) end
		,case when isnull(a.gweight,0)!=0 then a.gweight else isnull(a.[weight],0) end
	from view_vccs a
	left join view_vcc b on a.accy=b.accy and a.noa=b.noa
	where uno=@uno
	and isnull(b.typea,'')='1'
	and b.datea=@date
	and b.datea>@strdate
	--退貨(找上一筆的出貨單來退掉)
	declare cursor_table cursor for
		select b.datea
			,case when isnull(a.gmount,0)!=0 then a.gmount else isnull(a.mount,0) end
			,case when isnull(a.gweight,0)!=0 then a.gweight else isnull(a.[weight],0) end
		from view_vccs a
		left join view_vcc b on a.accy=b.accy and a.noa=b.noa
		where a.uno=@uno
		and isnull(b.typea,'')='2'
		and b.datea<=@date
		and b.datea>@strdate
	open cursor_table
	fetch next from cursor_table
	into @datea,@mount,@weight
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set mount=isnull(a.mount,0) - isnull(@mount,0)
			,[weight]=isnull(a.[weight],0) - isnull(@weight,0)
		from @tmp a
		outer apply(select top 1 sel from @tmp 
		where datea=@datea 
		order by datea desc,noa desc,noq desc) b
		where a.sel=b.sel
		
		fetch next from cursor_table
		into @datea,@mount,@weight
	end
	close cursor_table
	deallocate cursor_table
	--領料
	insert into @tmp(tablea,accy,noa,noq,datea,mount,[weight],[money],isucce)
	select 'get',a.accy,a.noa,a.noq,b.datea
		,case when isnull(a.gmount,0)!=0 then a.gmount else isnull(a.mount,0) end
		,case when isnull(a.gweight,0)!=0 then a.gweight else isnull(a.[weight],0) end
		,case when b.typea='盤點' then isnull(a.scost,0) else 0 end
		,case when b.typea='盤點' then 1 else 0 end
	from view_gets a
	left join view_get b on a.accy=b.accy and a.noa=b.noa
	where a.uno=@uno	
	and b.datea=@date
	and b.datea>@strdate
	--生產作業皮膜、保護膜 CUBT
	insert into @tmp(tablea,accy,noa,noq,datea,mount,[weight])
	select 'cubt',a.accy,a.noa,a.noq,b.datea
		,0 
		,isnull(a.[weight],0) --只看M
	from view_cubt a
	left join view_cub b on a.accy=b.accy and a.noa=b.noa
	where a.uno=@uno	
	and b.datea=@date
	and b.datea>@strdate
	----===============================================================================================
	select @weight=0,@money=0,@sprice=0
	declare @totweight decimal(25,5) = 0,@totmoney float =0
	if len(@strdate)>0
	begin
		--開帳資料
		select @weight=@strweight,@money=@strmoney --進貨總成本
		select @totweight = SUM(isnull(weight,0)) from @tmp
		update @tmp set [money] = round([weight]*@strprice,0) where isnull(isucce,0)=0
	end
	else
	begin
		select @weight=[weight],@money=[total] from [dbo].[money_rk](@uno,@date) --進貨總成本
		select @sprice=case when @weight=0 then 0 else round(@money/@weight,4) end
		select @totweight = SUM(isnull(weight,0)) from @tmp
		update @tmp set [money] = round([weight]*@sprice,0) where isnull(isucce,0)=0
	end
	
	if @totweight>=@weight
	begin
		---- 無庫存，須計算尾差，由最後一筆調整(不能是盤點的)
		select @totmoney = SUM([money]) from @tmp

		update @tmp set [money] = a.[money] - (@totmoney-@money)
		from @tmp a
		outer apply (select top 1 sel from @tmp where isnull(isucce,0)=0 order by  datea desc,accy desc,noa desc,noq desc) b
		where a.sel=b.sel
	end
	select @xmoney = 0
	select @xmoney=[money] from @tmp where accy=@accy and noa=@noa and noq=@noq
	update @result set [money]=@xmoney
	return
end