--進貨、入庫成本
ALTER function [dbo].[money_rk](@t_uno nvarchar(30),@t_date nvarchar(20))
returns @result table(
	[weight] float,[money] float
) as
begin
	declare @cost float = 0
	declare @tmpweight float
	declare @tmpmoney float
	declare @xweight float = 0 --庫存量
	declare @xmoney float = 0--庫存金額
	declare @date nvarchar(20)
	declare @weight float
	declare @money float
	declare @makeno nvarchar(30)
	declare @waste float
	declare @diff float
	declare @mon nvarchar(20)
	--===============================================================================================
	-- 進貨
	------ 進口報單轉來的要注意
	select @tmpweight=0,@tmpmoney=0
	select @tmpweight=SUM(case when b.typea='1' then 1 else -1 end * ISNULL(a.weight,0)) 
		,@tmpmoney=SUM(case when b.typea='1' then 1 else -1 end * case when e.noa is not null then ISNULL(e.cost,0) else ISNULL(a.total,0) end) 
	from view_rc2s a
	left join view_rc2 b on a.accy=b.accy and a.noa=b.noa
	left join deli d on a.noa=d.rc2no
	left join delis e on d.noa=e.noa and a.noq=e.noq
	where a.uno=@t_uno
	and b.datea<=@t_date
	select @xweight=@xweight+isnull(@tmpweight,0),@xmoney=@xmoney+isnull(@tmpmoney,0)
	

	--===============================================================================================
	-- 入庫
	------ 非領料組合來的
	select @tmpweight=0,@tmpmoney=0
	select @tmpweight=SUM(ISNULL(a.weight,0)) 
		,@tmpmoney=SUM(ISNULL(a.total,0)) 
	from view_inas a
	left join view_ina b on a.accy=b.accy and a.noa=b.noa
	left join view_get c on a.noa=c.noa
	where a.uno=@t_uno
	and b.datea<=@t_date
	and c.noa is null
	select @xweight=@xweight+isnull(@tmpweight,0),@xmoney=@xmoney+isnull(@tmpmoney,0)

	------ 領料組合
	select @tmpweight=0,@tmpmoney=0
	select @tmpweight=SUM(ISNULL(a.weight,0)) 
	from view_inas a
	left join view_ina b on a.accy=b.accy and a.noa=b.noa
	left join view_get c on a.noa=c.noa
	where a.uno=@t_uno
	and b.datea<=@t_date
	and c.noa is not null
	select @xweight=@xweight+isnull(@tmpweight,0)

	declare @inaccy nvarchar(10),@innoa nvarchar(20),@innoq nvarchar(10)
	declare @accy nvarchar(10),@noa nvarchar(20),@noq nvarchar(10)
	declare @ymoney float
	
	declare cursor_table cursor for
		select a.accy,a.noa,a.noq,d.accy,d.noa,d.noq,c.datea
		from view_inas a
		left join view_ina b on a.accy=b.accy and a.noa=b.noa
		left join view_get c on a.noa=c.noa
		left join view_gets d on c.accy=d.accy and c.noa=d.noa
		where a.uno=@t_uno
		and b.datea<=@t_date
		and c.noa is not null
	open cursor_table
	fetch next from cursor_table
	into @inaccy,@innoa,@innoq,@accy,@noa,@noq,@date
	while(@@FETCH_STATUS <> -1)
	begin
		set @ymoney=0
		select @ymoney=[money] from dbo.cost_rk('gets',@accy,@noa,@noq)
		set @xmoney=@xmoney+isnull(@ymoney,0)
		
		fetch next from cursor_table
		into @inaccy,@innoa,@innoq,@accy,@noa,@noq,@date
	end
	close cursor_table
	deallocate cursor_table
	
	--===============================================================================================
	-- 成品進倉
	declare @tmpa table(
		sel int identity(1,1)
		,accy nvarchar(10)
		,noa nvarchar(20)
		,noq nvarchar(10)
		,datea nvarchar(20)
		,makeno nvarchar(20)
		,mon nvarchar(10)
		,uno nvarchar(30)
		,[weight] float
		,price float
		,cost float
	)
	--期初轉入的忽略
	insert into @tmpa(accy,noa,noq,datea,makeno,mon,uno,[weight],cost)
	select b.accy,b.noa,b.noq,b.datea,a.makeno,SUBSTRING(b.datea,1,len(b.datea)-3),b.bno,b.[weight],isnull(b.total,0)
	from (select cname makeno from view_cuts where bno=@t_uno and len(cname)>0 and datea<=@t_date) a
	left join view_cuts b on a.makeno=b.cname
	left join view_cut c on b.accy=c.accy and b.noa=c.noa
	where left(b.datea,len(b.datea)-3)<=left(b.datea,len(@t_date)-3)
	order by b.datea,b.accy,b.noa,b.noq


	--取得生產成本單價
	-- cubs.hweight = cuts.weight + (cucs.weight8+cucs.weight9+cucs.weight10)
	declare @tmpb table(
		sel int identity(1,1)
		,makeno nvarchar(30)
		,[weight] float
		,[money] float
		,price float
	)

	declare cursor_table cursor for
		select makeno from @tmpa group by makeno
	open cursor_table
	fetch next from cursor_table
	into @makeno 
	while(@@FETCH_STATUS <> -1)
	begin
	
		insert into @tmpb(makeno,[weight],[money],price)
		select @makeno,[weight],total,case when [weight]=0 then 0 else ROUND(total/[weight],4) end 
		from dbo.makecost_rk(@makeno)
		
		fetch next from cursor_table
		into @makeno 
	end
	close cursor_table
	deallocate cursor_table

	
	declare @tmpc table(
		sel int identity(1,1)
		,makeno nvarchar(30)
		,mon nvarchar(10)
		,[weight] float  -- 進倉重  cuts.weight 
		,w01 float--樣品 cucs.weight6
		,w02 float--報廢 cucs.weight7
		,w03 float--盤盈 cucs.weight11
		,waste float  --  損耗重   cucs.weight8+cucs.weight9+cucs.weight10
		,price float
		,total float  --  成本
		,price2 float -- total/weight
	)	
	insert into @tmpc(makeno,mon,[weight],w01,w02,w03,waste)
	select makeno,mon,SUM(ISNULL([weight],0))
		,SUM(ISNULL([w01],0)),SUM(ISNULL([w02],0)),SUM(ISNULL([w03],0)),SUM(ISNULL([waste],0))
	from(
		select a.cname makeno,SUBSTRING(a.datea,1,len(a.datea)-3) mon
			,SUM(ISNULL(a.[weight],0)) [weight]
			,0 w01,0 w02,0 w03,0 waste
		from view_cuts a
		left join @tmpb b on a.cname=b.makeno
		where b.makeno is not null
		group by a.cname,SUBSTRING(a.datea,1,len(a.datea)-3)
		union all
		select a.cubno makeno,SUBSTRING(b.datea,1,len(b.datea)-3) mon
			,0 [weight]
			,SUM(ISNULL(a.weight6,0)) w01
			,SUM(ISNULL(a.weight7,0)) w02
			,SUM(ISNULL(a.weight11,0)) w03
			,SUM(ISNULL(a.weight8,0)+ISNULL(a.weight9,0)+ISNULL(a.weight10,0)) waste
		from view_cucs a
		left join view_cuc b on a.accy=b.accy and a.noa=b.noa
		left join @tmpb c on a.cubno=c.makeno
		where c.makeno is not null
		group by a.cubno,SUBSTRING(b.datea,1,len(b.datea)-3))a
	group by makeno,mon
	
	update @tmpc set price=b.price,total= round((a.[weight]+a.waste)*b.price,0)
	from @tmpc a
	left join @tmpb b on a.makeno=b.makeno



	update @tmpc set price2 = round(case when [weight]=0 then 0 else total/[weight] end,4)
	update @tmpa set price = b.price2,cost=round(a.[weight]*b.price2,0)
	from @tmpa a
	left join @tmpc b on a.makeno=b.makeno and a.mon=b.mon
	where len(a.noa)!=5
	--修正尾差

	declare cursor_table cursor for
		select makeno,mon,sum(isnull([total],0)) from @tmpc group by makeno,mon
	open cursor_table
	fetch next from cursor_table
	into @makeno,@mon,@money
	while(@@FETCH_STATUS <> -1)
	begin
		select @tmpmoney=0
		select @tmpmoney=SUM(ISNULL([cost],0)) 
		from @tmpa where makeno=@makeno and mon=@mon
		
		if @money != @tmpmoney
		begin
			set @diff = @money-@tmpmoney
			update @tmpa set cost = ISNULL(a.cost,0) + @diff 
			from @tmpa a
			outer apply(select top 1 sel from @tmpa 
				where makeno=@makeno and mon=@mon and len(a.noa)!=5 order by sel desc) b
			where a.sel=b.sel
		end
		
		fetch next from cursor_table
		into @makeno,@mon,@money
	end
	close cursor_table
	deallocate cursor_table
	
	select @tmpweight=0,@tmpmoney=0
	select @tmpweight=[weight],@tmpmoney=[cost]
	from @tmpa 
	where uno=@t_uno
	select @xweight=@xweight+isnull(@tmpweight,0),@xmoney=@xmoney+isnull(@tmpmoney,0)
	--===============================================================================================
	insert into @result([weight],[money])values(@xweight,@xmoney)
	
	return
end
